{"meta":{"title":"One_Lab","subtitle":"Study","description":null,"author":"Soo","url":"http://onemask.github.io"},"pages":[{"title":"18_07_25","date":"2018-07-25T13:01:59.000Z","updated":"2018-07-25T13:01:59.682Z","comments":true,"path":"18-07-25/index.html","permalink":"http://onemask.github.io/18-07-25/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-07-25T13:03:26.000Z","updated":"2018-07-25T13:04:18.014Z","comments":true,"path":"categories/index.html","permalink":"http://onemask.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"[Koltin] 객체 ","slug":"Koltin-객체","date":"2018-08-02T11:32:56.000Z","updated":"2018-08-02T11:33:49.493Z","comments":true,"path":"2018/08/02/Koltin-객체/","link":"","permalink":"http://onemask.github.io/2018/08/02/Koltin-객체/","excerpt":"","text":"[Kotlin] 객체.: 서로 연관 있는 변수 들을 묶어 놓는 데이터 덩어리. 1234567891011package ex_objectfun main(args:Array&lt;String&gt;)&#123; val person = object &#123; val name:String = \"홍길동\" val age :Int = 23 &#125; println(person.name) println(person.age)&#125; Koltin에서 Property_속성 (name,age) -&gt; 선언과 동시에 초기화해야한다. #자바의 Field &amp; 코틀린의 Property 자바는 객체 지향형 프로그램이기에 데이터 자체는 외부에서 접근할 수 없도록 private 접근 제어자로 설정하고 public 으로 메소드만 공개하고 이 중 유효한 값들을 데이터로 저장한다. private로 설정한 속성이 자바의 Field 이다. 이러한 Field 와 Setter(값을 설정), Getter(값 가져오기)를 합친 개념이코틀린의 Property다. 123456789101112131415161718public class Person&#123; private String name; private int age;&#125;public String setName(String name)&#123; this.name= n;&#125;public String getName()&#123; return name;&#125;public String setAge(int age)&#123; this.age= age;&#125;public String setName(String n)&#123; return age;&#125; 참고 서적 : 초보자를 위한 Koltin 200제.","categories":[],"tags":[]},{"title":"[알고리즘]백준알고리즘_2750","slug":"백준알고리즘-2750","date":"2018-08-02T07:27:45.000Z","updated":"2018-08-02T08:24:05.474Z","comments":true,"path":"2018/08/02/백준알고리즘-2750/","link":"","permalink":"http://onemask.github.io/2018/08/02/백준알고리즘-2750/","excerpt":"","text":"[Back_2750]수 정렬하기.나와라 아무거나 나와라 나와나ㅗㄴ왈ㄴㅁ일모닝ㄹ 보자마자 어떻게 짜야할지는 감이 왔다. Java를 사용하는 나로써는 Test_case만큼 입력받고해당 크기에 해당하는 배열을 만들어서 오름차순으로 정렬하고자 했다. 그래서 작성한 코드는 아래와 같다. 12345678910111213141516171819202122232425262728293031323334import java.util.Scanner;public class Back_2750 &#123; public static void main(String[]args)&#123; Scanner sc = new Scanner(System.in); int caseNum = sc.nextInt(); int[] array = new int[caseNum]; for (int i=0;i&lt;caseNum;i++) array[i]=sc.nextInt(); solution(array); for (int i=0;i&lt;array.length;i++) System.out.println(array[i]); &#125; private static void solution(int[] array) &#123; for (int i=0;i&lt;array.length;i++)&#123; for(int j=i;j&lt;array.length;j++) &#123; if (array[i] &gt; array[j]) &#123; int temp = array[i]; array[i] = array[j]; array[j] = temp; &#125; &#125; &#125; &#125;&#125; 뭔가 복잡도에서 맘에 걸리긴한데.. 그냥 이렇게 했다. 그러나 문제는 위와 똑같은 문제에서 발생했다.","categories":[{"name":"Algorithm,","slug":"Algorithm","permalink":"http://onemask.github.io/categories/Algorithm/"}],"tags":[]},{"title":"new","slug":"new","date":"2018-07-25T14:33:10.000Z","updated":"2018-07-25T14:33:10.702Z","comments":true,"path":"2018/07/25/new/","link":"","permalink":"http://onemask.github.io/2018/07/25/new/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"new Post","slug":"new-Post","date":"2018-07-25T13:43:31.000Z","updated":"2018-07-25T13:43:31.049Z","comments":true,"path":"2018/07/25/new-Post/","link":"","permalink":"http://onemask.github.io/2018/07/25/new-Post/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Title","slug":"Title","date":"2018-07-25T12:52:14.000Z","updated":"2018-07-25T12:52:14.125Z","comments":true,"path":"2018/07/25/Title/","link":"","permalink":"http://onemask.github.io/2018/07/25/Title/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"original_Theme","slug":"original-Theme","date":"2018-07-25T12:39:36.000Z","updated":"2018-07-25T12:39:36.732Z","comments":true,"path":"2018/07/25/original-Theme/","link":"","permalink":"http://onemask.github.io/2018/07/25/original-Theme/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"overdose_theme","slug":"overdose-theme","date":"2018-07-25T12:29:25.000Z","updated":"2018-07-25T12:29:25.138Z","comments":true,"path":"2018/07/25/overdose-theme/","link":"","permalink":"http://onemask.github.io/2018/07/25/overdose-theme/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Applied Overdose_Theme","slug":"Applied-Overdose-Theme","date":"2018-07-25T12:14:26.000Z","updated":"2018-07-25T12:14:27.024Z","comments":true,"path":"2018/07/25/Applied-Overdose-Theme/","link":"","permalink":"http://onemask.github.io/2018/07/25/Applied-Overdose-Theme/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"frist-post","slug":"frist-post","date":"2018-07-24T08:14:30.000Z","updated":"2018-07-25T13:03:08.678Z","comments":true,"path":"2018/07/24/frist-post/","link":"","permalink":"http://onemask.github.io/2018/07/24/frist-post/","excerpt":"","text":"","categories":[],"tags":[{"name":"tags","slug":"tags","permalink":"http://onemask.github.io/tags/tags/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-07-24T08:05:58.756Z","updated":"2018-07-24T08:05:58.756Z","comments":true,"path":"2018/07/24/hello-world/","link":"","permalink":"http://onemask.github.io/2018/07/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}